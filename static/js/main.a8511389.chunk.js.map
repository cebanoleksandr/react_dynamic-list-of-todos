{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","index","setUserId","setTodo","selectedTodo","className","classNames","id","completed","title","type","onClick","currentTodo","userId","TodoList","todos","query","filter","preparedTodos","newTodos","trim","normalizedQuery","toLowerCase","toLocaleLowerCase","includes","getTodos","map","TodoFilter","setQuery","setFilter","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","getUser","data","href","email","name","App","isLoading","setIsLoading","setTodos","selectedUserId","setSelectedUserId","ReactDOM","render","document","getElementById"],"mappings":"oPAYaA,EAA4B,SAAC,GAMnC,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAOA,OACE,qBACE,UAAQ,OACRC,UAAWC,IAAW,CACpB,6BAAyC,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcG,MAAOP,EAAKO,KAH3D,UAME,oBAAIF,UAAU,eAAd,SAA8BJ,EAAQ,IAEtC,oBAAII,UAAU,eAAd,SACGL,EAAKQ,WACJ,sBAAMH,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWC,IAAW,CACvB,mBAAoBN,EAAKQ,UACzB,mBAAoBR,EAAKQ,YAF3B,SAKGR,EAAKS,UAIV,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVK,KAAK,SACLC,QAAS,kBApCfT,GADyBU,EAqCcZ,GApCjBa,aACtBV,EAAQS,GAFgB,IAACA,GAiCrB,SAME,sBAAMP,UAAU,OAAhB,SACE,mBAAGA,UAAWC,IAAW,CACvB,cAA0B,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcG,MAAOP,EAAKO,GACxC,oBAAgC,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAcG,MAAOP,EAAKO,iBCxBrD,IAAMO,EAA4B,SAAC,GAOnC,IANLC,EAMI,EANJA,MACAb,EAKI,EALJA,UACAC,EAII,EAJJA,QACAa,EAGI,EAHJA,MACAC,EAEI,EAFJA,OACAb,EACI,EADJA,aAEMc,EAxCR,SAAkBH,EAAeC,EAAeC,GAC9C,IAAIE,EAAWJ,EAEf,GAAIC,EAAMI,OAAQ,CAChB,IAAMC,EAAkBL,EAAMI,OAAOE,cAErCH,EAAWJ,EAAME,QACf,SAAAjB,GAAI,OAAIA,EAAKS,MAAMc,oBAAoBC,SAASH,MAIpD,OAAQJ,GACN,IAAK,SACH,OAAOE,EAASF,QAAO,SAAAjB,GAAI,OAAKA,EAAKQ,aAEvC,IAAK,YACH,OAAOW,EAASF,QAAO,SAAAjB,GAAI,OAAIA,EAAKQ,aAEtC,QACE,OAAOW,GAqBWM,CAASV,EAAOC,EAAOC,GAE7C,OACE,wBAAOZ,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGa,EAAcQ,KAAI,SAAC1B,EAAMC,GAAP,OACjB,cAAC,EAAD,CACED,KAAMA,EACNC,MAAOA,EACPC,UAAWA,EACXC,QAASA,EAETC,aAAcA,GADTJ,EAAKO,aC3DToB,EAA8B,SAAC,GAKrC,IAJLX,EAII,EAJJA,MACAY,EAGI,EAHJA,SACAC,EAEI,EAFJA,UACAZ,EACI,EADJA,OAEA,OACE,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRyB,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOH,EAAUG,EAAEC,OAAOH,QAHtC,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGzB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRK,KAAK,OACLL,UAAU,QACV6B,YAAY,YACZJ,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOH,UAErC,sBAAMzB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGf,sBAAMA,UAAU,gBAAgB8B,MAAO,CAAEC,cAAe,OAAxD,WACKpB,GAED,wBACE,UAAQ,oBACRN,KAAK,SACLL,UAAU,SACVM,QAAS,kBAAMiB,EAAS,gBCxCtC,SAASS,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,IClBMC,EAAmB,kBAC9B,qBAAK3C,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCQN4C,EAA6B,SAAC,GAKpC,IAJLpC,EAII,EAJJA,OACAX,EAGI,EAHJA,UACAF,EAEI,EAFJA,KACAG,EACI,EADJA,QAEA,EAAwB+C,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,YFEW,SAACxC,GAAD,OAAoBwB,EAAG,iBAAiBxB,KED3DyC,CAAQzC,GAAQ+B,MAAK,SAAAW,GACnBH,EAAQG,QAET,IAOH,OACE,sBAAKlD,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb8C,EAGA,sBAAK9C,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYL,EAAKO,MAIjB,wBACEG,KAAK,SACLL,UAAU,SACV,UAAQ,cACRM,QA1BO,WACjBT,EAAU,MACVC,EAAQ,YA4BF,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGL,EAAKS,QAGR,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UACGL,EAAKQ,UACJ,wBAAQH,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAGmD,KAAI,iBAAYL,EAAKM,OAAxB,SACGN,EAAKO,gBAnCd,cAAC,EAAD,QCxBKC,EAAgB,WAC3B,MAAkCT,oBAAS,GAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA0BX,mBAAiB,IAA3C,mBAAOnC,EAAP,KAAc+C,EAAd,KACA,EAAwBZ,mBAAsB,MAA9C,mBAAOlD,EAAP,KAAaG,EAAb,KACA,EAA4C+C,mBAAwB,MAApE,mBAAOa,EAAP,KAAuBC,EAAvB,KACA,EAA0Bd,mBAAS,IAAnC,mBAAOlC,EAAP,KAAcY,EAAd,KACA,EAA4BsB,mBAAiB,OAA7C,mBAAOjC,EAAP,KAAeY,EAAf,KAWA,OATAwB,qBAAU,WACRQ,GAAa,GHDaxB,EAAY,UGG3BO,MAAK,SAAAW,GACdO,EAASP,GACTM,GAAa,QAEd,IAGD,qCACE,qBAAKxD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,MAAOA,EACPY,SAAUA,EACVX,OAAQA,EACRY,UAAWA,MAIf,qBAAKxB,UAAU,QAAf,SACGuD,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CACE7C,MAAOA,EACPX,aAAcJ,EACdiB,OAAQA,EACRf,UAAW8D,EACX7D,QAASA,EACTa,MAAOA,aAQlB+C,GAAkB/D,GACjB,cAAC,EAAD,CACEa,OAAQkD,EACR7D,UAAW8D,EACXhE,KAAMA,EACNG,QAASA,QClEnB8D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a8511389.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  index: number;\n  setUserId: (id: number | null) => void;\n  setTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  index,\n  setUserId,\n  setTodo,\n  selectedTodo,\n}) => {\n  const selectTodoHandler = (currentTodo: Todo) => {\n    setUserId(currentTodo.userId);\n    setTodo(currentTodo);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': selectedTodo?.id === todo.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{index + 1}</td>\n\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => selectTodoHandler(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              'far fa-eye': selectedTodo?.id !== todo.id,\n              'far fa-eye-slash': selectedTodo?.id === todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nfunction getTodos(todos: Todo[], query: string, filter: Filter): Todo[] {\n  let newTodos = todos;\n\n  if (query.trim()) {\n    const normalizedQuery = query.trim().toLowerCase();\n\n    newTodos = todos.filter(\n      todo => todo.title.toLocaleLowerCase().includes(normalizedQuery),\n    );\n  }\n\n  switch (filter) {\n    case 'active':\n      return newTodos.filter(todo => !todo.completed);\n\n    case 'completed':\n      return newTodos.filter(todo => todo.completed);\n\n    default:\n      return newTodos;\n  }\n}\n\ntype Props = {\n  todos: Todo[];\n  setUserId: (id: number | null) => void;\n  setTodo: (todo: Todo) => void;\n  query: string;\n  filter: Filter;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setUserId,\n  setTodo,\n  query,\n  filter,\n  selectedTodo,\n}) => {\n  const preparedTodos = getTodos(todos, query, filter);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {preparedTodos.map((todo, index) => (\n          <TodoItem\n            todo={todo}\n            index={index}\n            setUserId={setUserId}\n            setTodo={setTodo}\n            key={todo.id}\n            selectedTodo={selectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string;\n  setQuery: (query: string) => void;\n  filter: Filter;\n  setFilter: (filter: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilter,\n  filter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value as Filter)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {!!query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number;\n  setUserId: (id: number | null) => void;\n  todo: Todo;\n  setTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  setUserId,\n  todo,\n  setTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(data => {\n      setUser(data);\n    });\n  }, []);\n\n  const closeModal = () => {\n    setUserId(null);\n    setTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [selectedUserId, setSelectedUserId] = useState<number | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<Filter>('all');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos().then(data => {\n      setTodos(data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={todo}\n                  filter={filter}\n                  setUserId={setSelectedUserId}\n                  setTodo={setTodo}\n                  query={query}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedUserId && todo && (\n        <TodoModal\n          userId={selectedUserId}\n          setUserId={setSelectedUserId}\n          todo={todo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}